# Gateway config, and associated virtual services

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
{{- if $.Values.certManager }}
  - port:
      number: 443
      name: https-default
      protocol: HTTPS
    tls:
      mode: SIMPLE
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
      privateKey: /etc/istio/ingressgateway-certs/tls.key
    hosts:
    - "*"
{{- end }}
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "prom.{{ .Values.domain }}"
    - "prom.local"
    - "grafana.{{ .Values.domain }}"
    - "grafana.local"
    - "kiali.{{ .Values.domain }}"
    - "kiali.local"
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: grafana
spec:
  hosts:
  - "grafana.{{ .Values.domain }}"
  - "grafana.local"
  gateways:
  - istio-gateway
  http:
  - route:
    - destination:
        host: grafana.{{ .Values.telemetryNamespace }}.svc.cluster.local
        port:
          number: 3000
---
apiVersion: "networking.istio.io/v1alpha3"
kind: "DestinationRule"
metadata:
  name: "grafana"
spec:
  host: grafana.istio-system.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kiali
spec:
  hosts:
  - "kiali.{{ .Values.domain }}"
  - "kiali.local"
  gateways:
  - istio-gateway
  http:
  - route:
    - destination:
        host: kiali.{{ .Values.telemetryNamespace }}.svc.cluster.local
        port:
          number: 20001
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: prom
spec:
  hosts:
  - "prom.{{ .Values.domain }}"
  - "prom.local"
  gateways:
  - istio-gateway
  http:
  - route:
    - destination:
        host: istio-prometheus.istio-prometheus.svc.cluster.local
        port:
          number: 9090
---
apiVersion: "networking.istio.io/v1alpha3"
kind: "DestinationRule"
metadata:
  name: "prom"
spec:
  host: istio-prometheus.istio-prometheus.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: tracing
spec:
  hosts:
  - "tracing.{{ .Values.domain }}"
  - "tracing.local"
  gateways:
  - istio-gateway
  http:
  - route:
    - destination:
        host: tracing.istio-system.svc.cluster.local
        port:
          number: 80
---
apiVersion: "networking.istio.io/v1alpha3"
kind: "DestinationRule"
metadata:
  name: "tracing"
spec:
  host: tracing.istio-system.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
{{- if $.Values.certManager }}
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: ist
  namespace: istio-system
spec:
  secretName: istio-ingressgateway-certs
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  commonName: prom.{{ .Values.domain }}
  dnsNames:
  - prom.{{ .Values.domain }}
  - grafana.{{ .Values.domain }}
  - kiali.{{ .Values.domain }}
  acme:
    config:
    - http01:
        ingressClass: istio
      domains:
      - prom.{{ .Values.domain }}
      - grafana.{{ .Values.domain }}
      - kiali.{{ .Values.domain }}
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: test-certs
  namespace: istio-system
spec:
  secretName: istio-ingressgateway-certs-fortiotls
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  commonName: fortiotls.{{ .Values.domain }}
  dnsNames:
  - fortiotls.{{ .Values.domain }}
  acme:
    config:
    - http01:
        ingressClass: istio
      domains:
      - fortiotls.{{ .Values.domain }}
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: fortionoistio
  namespace: istio-system
spec:
  secretName: istio-ingressgateway-certs-fortionoistio
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  commonName: fortionoistio.{{ .Values.domain }}
  dnsNames:
  - fortionoistio.{{ .Values.domain }}
  - fortionoistio1.{{ .Values.domain }}
  acme:
    config:
    - http01:
        ingressClass: istio
      domains:
      - fortionoistio.{{ .Values.domain }}
      - fortionoistio1.{{ .Values.domain }}
{{- end }}
