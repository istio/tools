# This replaces the "auth.istio.io/8080: MUTUAL_TLS|NONE" service annotation
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: fortiotls
spec:
  peers:
  - mtls: {}
  peer_is_optional: true
  targets:
  # Must be short name of service
  - name: fortiotls
    # subsets: "v2"
    ports:
    # name also supported
    # TODO: this should be target port (container)
    - number: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: fortiotls
spec:
  host:  fortiotls.test.svc.cluster.local
  trafficPolicy:
    tls:
      # Equivalent with ISTIO_MUTUAL
      mode: MUTUAL
      client_certificate: /etc/certs/cert-chain.pem
      private_key: /etc/certs/key.pem
      ca_certificates: /etc/certs/root-cert.pem
      subject_alt_names:
      - spiffe://cluster.local/ns/test/sa/default


---
apiVersion: v1
kind: Service
metadata:
  name: fortiotls
spec:
  ports:
  - port: 8080
    name: http-echo
  - port: 8079
    name: grpc-ping
  selector:
    app: fortiotls
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: fortiotls
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        # Pointing to the mesh gateway, with tls
        sidecar.istio.io/controlPlaneAuthPolicy: MUTUAL_TLS
        sidecar.istio.io/discoveryAddress: pilot.{{ .Values.domain }}:15011
      labels:
        app: fortiotls
        version: tls
    spec:
      containers:
      - name: fortio
        image: {{ .Values.fortioImage }}
        ports:
         - containerPort: 8080
         - containerPort: 8079
        args:
          - server
        resources:
          requests:
            cpu: 800m
            memory: "1G"
          limits:
            cpu: 1000m
            memory: "1G"

---

#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: fortiotls
#spec:
#  hosts:
#  - "fortiotls.{{ .Values.domain }}"
#  gateways:
#  - istio-gateway
#  http:
#  - route:
#    - destination:
#        host: fortiotls.test.svc.cluster.local
#        port:
#          number: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: fortiotls
  annotations:
    kubernetes.io/ingress.class: istio
spec:
  rules:
  - host: fortiotls.{{ .Values.domain }}
    http:
      paths:
      - path: /fortio.*
        backend:
          serviceName: fortiotls
          servicePort: 8080
      - path: /echo.*
        backend:
          serviceName: fortiotls
          servicePort: 8080
