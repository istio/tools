image:
  hub: quay.io/prometheus/alertmanager
  tag: v0.20.0
  pullPolicy: IfNotPresent

replicaCount: 2
config:
  global:
    resolve_timeout: 5m
  route:
    group_by: ['alertname', 'cluster']
    group_wait: 10s
    group_interval: 10s
    repeat_interval: 1h
    receiver: 'test'
  receivers:
    - name: 'test'
      webhook_configs:
        - url: 'http://am-webhook.istio-prometheus:5001/webhook'
#      [Optional Slack Config] Need to replace <slack_webhook_url> with actual value first
#      slack_configs:
#        - api_url: <slack_webhook_url>
#          channel: "#stability-test"
#          send_resolved: true
#          title: |-
#            [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
#            {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
#              {{" "}}(
#              {{- with .CommonLabels.Remove .GroupLabels.Names }}
#                {{- range $index, $label := .SortedPairs -}}
#                  {{ if $index }}, {{ end }}
#                  {{- $label.Name }}="{{ $label.Value -}}"
#                {{- end }}
#              {{- end -}}
#              )
#            {{- end }}
#          text: >-
#            {{ with index .Alerts 0 -}}
#              :chart_with_upwards_trend: *<{{ .GeneratorURL }}|Graph>*
#              {{- if .Annotations.runbook }}   :notebook: *<{{ .Annotations.runbook }}|Runbook>*{{ end }}
#            {{ end }}
#
#            *Alert details*:
#
#            {{ range .Alerts -}}
#              *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
#            *Description:* {{ .Annotations.description }}
#            *Details:*
#              {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
#              {{ end }}
#            {{ end }}

## External URL which can access alertmanager
baseURL: "http://localhost:9093"

configFileName: alertmanager.yml
resources: {}

# Below are configs for spanner connection.
projectID: "istio-testing"
clusterName: "release-qual"
# spanner instance name
instance: "istio-policy-bot"
# spanner db name
dbName: "main"
# spanner table name for storing monitor status
msTableName: "MonitorStatus"
# spanner table name for storing release qualification test metadata
tmTableName: "ReleaseQualTestMetadata"
# branch/tag/SHA of the Istio installed initially
branch: "master"
# testID is the unique ID to identify a specific release qualification test run.
testID: ""
# prometheus/grafana and other telemetry addon would be accessible from this domain
domain: "release-qual.qualistio.org"
