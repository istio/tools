# This replaces the "auth.istio.io/8080: MUTUAL_TLS|NONE" service annotation
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: fortiottls
spec:
  peers:
  - mtls:
      mode: PERMISSIVE
  peer_is_optional: true
  targets:
  # Must be short name of service
  - name: fortiottls
    # subsets: "v2"
    ports:
    # name also supported
    # TODO: this should be target port (container)
    - number: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: fortiottls
spec:
  host:  fortiottls.test.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: v1
kind: Service
metadata:
  name: fortiottls
spec:
  ports:
  - port: 8080
    name: http-echo
  - port: 8081
    targetPort: 8080
    name: http-echo1
  - port: 8079
    name: grpc-ping
  selector:
    app: fortiottls
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: fortiottls
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        # Pointing to the mesh gateway, with tls
        sidecar.istio.io/controlPlaneAuthPolicy: MUTUAL_TLS
        sidecar.istio.io/discoveryAddress: pilot.{{ .Values.domain }}:15011
      labels:
        app: fortiottls
        version: ttls
    spec:
      containers:
      - name: fortio
        image: {{ .Values.fortioImage }}
        ports:
         - containerPort: 8080
         - containerPort: 8079
        args:
          - server
        resources:
          requests:
            cpu: 800m
            memory: "1G"
          limits:
            cpu: 1000m
            memory: "1G"

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: fortiottls
spec:
  hosts:
  - "fortiottls.{{ .Values.domain }}"
  gateways:
  - istio-gateway
  http:
  - route:
    - destination:
        host: fortiottls.test.svc.cluster.local
        port:
          number: 8080
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cli-fortio-ttls-notls
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cli-fortio-ttls
        version: v1-ttls
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: echosrv
        image: istio/fortio:latest
        imagePullPolicy: Always
        args:
          - load
          - -t
          - "0"
          - -c
          - "32"
          - -qps
          - "10"
          - http://fortiottls.test:8080/echo?size=5000
        resources:
          requests:
            cpu: 10m
            memory: "100M"
          limits:
            cpu: 10m
            memory: "100M"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cli-fortio-ttls-tls
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cli-fortio-ttls
        version: v1-ttls
    spec:
      containers:
      - name: echosrv
        image: istio/fortio:latest
        imagePullPolicy: Always
        args:
          - load
          - -t
          - "0"
          - -c
          - "32"
          - -qps
          - "10"
          - http://fortiottls.test:8080/echo?size=5000
        resources:
          requests:
            cpu: 10m
            memory: "100M"
          limits:
            cpu: 10m
            memory: "100M"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cli-fortio-ttls
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cli-fortio-ttls
        version: v1-ttls
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: echosrv
        image: istio/fortio:latest
        imagePullPolicy: Always
        args:
          - load
          - -t
          - "0"
          - -c
          - "32"
          - -qps
          - "{{ .Values.qps }}"
          - http://fortiottls.{{ .Values.domain }}/echo?size=5000
        resources:
          requests:
            cpu: 800m
            memory: "1G"
          limits:
            cpu: 1000m
            memory: "1G"
