# IngressGateway setup that is configured to support standard K8S Ingress. The
# deployment also features a readiness check that should prevent it from
# receiving traffic until a configuration is delivered from Pilot.
---
apiVersion: v1
kind: Service
metadata:
  name: istio-ingress-{{ .Values.namespace }}
  labels:
    release: istio
    istio: ingress-{{ .Values.namespace }}
  annotations:
spec:
  type: LoadBalancer
  selector:
    istio: ingress-{{ .Values.namespace }}
  ports:
    - name: http
      port: 80
    - name: https
      port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingress-{{ .Values.namespace }}
  labels:
    app: ingressgateway
    chart: ingress
    heritage: Tiller
    release: istio
    istio: ingress-{{ .Values.namespace }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ingressgateway
        chart: ingress
        heritage: Tiller
        release: istio
        istio: ingress-{{ .Values.namespace }}
      annotations:
        sidecar.istio.io/inject: "false"
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      terminationGracePeriodSeconds: 120
      containers:
        - name: ingress
          image: {{ .Values.proxyImage }}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 15090
              name: http-envoy-prom
              protocol: TCP
          args:
          - proxy
          - ingress
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --log_output_level
          - 'info'
          - --drainDuration
          - '45s' #drainDuration
          - --parentShutdownDuration
          - '1m0s' #parentShutdownDuration
          - --connectTimeout
          - '10s' #connectTimeout
          - --serviceCluster
          - istio-ingress
          - --proxyAdminPort
          - "15000"
          - --statusPort
          - "15020"
          - --controlPlaneAuthPolicy
          - NONE
          - --discoveryAddress
          - istio-pilot:15010
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          volumeMounts:
          - name: istio-certs
            mountPath: /etc/certs
            readOnly: true
          - name: ingress-certs
            mountPath: /etc/istio/ingress-certs
            readOnly: true
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.default
          optional: true
      - name: ingress-certs
        secret:
          secretName: istio-ingress-certs
          optional: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-autogenerated-k8s-ingress
spec:
  selector:
    istio: ingress-{{ .Values.namespace }}
  servers:
    - port:
        number: 80
        protocol: HTTP2
        name: http
      hosts:
        - "*"
