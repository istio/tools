apiVersion: v1
kind: Service
metadata:
  name: badhealth
spec:
  ports:
  - name: http-web
    port: 8080
    protocol: TCP
  selector:
    app: badhealth
  type: ClusterIP
---
{{- if $.Values.rbac.enabled }}
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: badhealth
spec:
  rules:
  - services: ["badhealth.*"]
    methods: ["*"]
---
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRoleBinding
metadata:
  name: badhealth
spec:
  subjects:
  - user: "*"
  roleRef:
    kind: ServiceRole
    name: "badhealth"
---
{{- end }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: badhealth
    version: v1
  name: badhealth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: badhealth
      version: v1
  template:
    metadata:
      labels:
        app: badhealth
        version: v1
    spec:
      containers:
      - args:
        - --port
        - "8080"
        - --port
        - "3333"
        - --version
        - v1
        image: docker.io/istionightly/app:nightly-release-1.0
        imagePullPolicy: IfNotPresent
        name: app
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 100
          httpGet:
            path: /healthz
            port: 3334
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
